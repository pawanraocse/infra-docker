version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: awsinfra
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - awsinfra-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    ports:
      - "5432:5432" # remove in production

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: awsinfra-app:1.0.0
    container_name: awsinfra-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/awsinfra
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
      MANAGEMENT_ENDPOINTS_WEB_BASE_PATH: /actuator
    networks:
      - awsinfra-net
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  awsinfra-net:
    driver: bridge
